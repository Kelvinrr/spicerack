swagger: "2.0"
info:
  description: "About"
  version: "1.0"
  title: "Pfeffernusse"
  contact:
    email: "jlaura@usgs.gov"
  license:
    name: "UnLicense"
    url: "http://unlicense.org/"
host: "astrogeology.wr.usgs.gov"
basePath: "/api/1.0"
schemes:
- "http"
- "https"
paths:
  /missions:
    get:
      tags:
      - "missions"
      summary: "A listing of all available missions"
      description: ""
      operationId: "listMissions"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Missions"
              
  /naif:
    get:
      tags:
      - "naif"
      summary: "Returns the hash of the HOME dataframe"
      description: ""
      operationId: "getNaifNames"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Naif"
  
  /hash:
    get:
      tags:
      - "hash"
      summary: "Returns the hash of the HOME dataframe"
      description: ""
      operationId: "getHash"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hash"
              
  /dataframe:
    get:
      tags:
      - "dataframe"
      summary: "Returns dataframe in JSON form"
      description: ""
      operationId: "getDataframe"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Dataframe"
  /update:
    get:
      tags:
      - "update"
      summary: "A listing of all available API's"
      description: ""
      operationId: "listNodes"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Update"
  /update/{user}:
    get:
      tags:
      - "sync"
      summary: "A listing of all available API's"
      description: ""
      operationId: "syncNodes"
      parameters:
        - name: user
          in: path
          description: Sync with that user
          required: true
          type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Update"
              
  /update/{user}/ssh:
    get:
      tags:
      - "ssh"
      summary: "Returns Public SSH Key of User"
      description: ""
      operationId: "getPublicSSH"
      parameters:
        - name: user
          in: path
          description: Return SSH Public Key
          required: true
          type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Update"
    
  /missions/{mission}:
    get:
      tags:
      - "mission"
      summary: "Get a listing of available kernel types by missions"
      description: "Get a listing of available kernel types by missions"
      operationId: "findMission"
      parameters:
        - name: mission
          in: path
          description: Name of the missions
          required: true
          type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Missions"
        400:
          description: "Invalid mission name"
  /missions/{mission}/kernels:
    get:
      tags:
      - "kernels"
      summary: "List kernels for a given mission"
      description: ""
      operationId: "findKernelsByMission"
      produces:
      - "application/json"
      parameters:
        - name: mission
          in: path
          description: "Name of the missions"
          required: true
          type: string
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Kernels"
        400:
          description: "Invalid tag value"
          
  /missions/{mission}/metakernels:
    get:
      tags:
      - "metakernels"
      summary: "List metakernels for a given mission"
      description: ""
      operationId: "findMetaKernelsByMission"
      produces:
      - "application/json"
      parameters:
        - name: mission
          in: path
          description: "Name of the missions"
          required: true
          type: string
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Metakernels"
        400:
          description: "Invalid tag value"

definitions:
  Missions:
    type: "array"
    items:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          
  Update:
    type: "array"
    items:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          
  Naif:
    type: "array"
    items:
      type: "object"
          
  Dataframe:
    type: "array"
    items:
      type: "object"
          
  Hash:
    type: "string"
    items:
      type: "object"
  
  Kernels:
    type: "array"
    items:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        newest:
          type: "boolean"
        path:
          type: "string"
        year:
          type: "string"
  
  Metakernels:
    type: "array"
    items:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        newest:
          type: "boolean"
        path:
          type: "string"
        year:
          type: "object"
  
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"