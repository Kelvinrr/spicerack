# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from spicerack.models.base_model_ import Model
from spicerack import util


class Metakernel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, mission: str=None, year: int=None, version: str=None, path: str=None):  # noqa: E501
        """Metakernel - a model defined in Swagger

        :param mission: The mission of this Metakernel.  # noqa: E501
        :type mission: str
        :param year: The year of this Metakernel.  # noqa: E501
        :type year: int
        :param version: The version of this Metakernel.  # noqa: E501
        :type version: str
        :param path: The path of this Metakernel.  # noqa: E501
        :type path: str
        """
        self.swagger_types = {
            'mission': str,
            'year': int,
            'version': str,
            'path': str
        }

        self.attribute_map = {
            'mission': 'mission',
            'year': 'year',
            'version': 'version',
            'path': 'path'
        }

        self._mission = mission
        self._year = year
        self._version = version
        self._path = path

    @classmethod
    def from_dict(cls, dikt) -> 'Metakernel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The metakernel of this Metakernel.  # noqa: E501
        :rtype: Metakernel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mission(self) -> str:
        """Gets the mission of this Metakernel.

        The mission which the metakernel belongs to  # noqa: E501

        :return: The mission of this Metakernel.
        :rtype: str
        """
        return self._mission

    @mission.setter
    def mission(self, mission: str):
        """Sets the mission of this Metakernel.

        The mission which the metakernel belongs to  # noqa: E501

        :param mission: The mission of this Metakernel.
        :type mission: str
        """

        self._mission = mission

    @property
    def year(self) -> int:
        """Gets the year of this Metakernel.

        Metakernel year  # noqa: E501

        :return: The year of this Metakernel.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year: int):
        """Sets the year of this Metakernel.

        Metakernel year  # noqa: E501

        :param year: The year of this Metakernel.
        :type year: int
        """

        self._year = year

    @property
    def version(self) -> str:
        """Gets the version of this Metakernel.

        Metakernel version  # noqa: E501

        :return: The version of this Metakernel.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this Metakernel.

        Metakernel version  # noqa: E501

        :param version: The version of this Metakernel.
        :type version: str
        """

        self._version = version

    @property
    def path(self) -> str:
        """Gets the path of this Metakernel.

        Path to Metakernel  # noqa: E501

        :return: The path of this Metakernel.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this Metakernel.

        Path to Metakernel  # noqa: E501

        :param path: The path of this Metakernel.
        :type path: str
        """

        self._path = path
